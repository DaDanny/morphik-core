services:
  morphik:
    image: ghcr.io/morphik-org/morphik-core:latest
    container_name: morphik-app
    ports:
      - "8000:8000"
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
      # Use environment variable for database connection (supports external databases)
      - POSTGRES_URI=${POSTGRES_URI:-postgresql+asyncpg://morphik:morphik@postgres:5432/morphik}
      - PGPASSWORD=${PGPASSWORD:-morphik}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      # Use custom config file (created by startup script)
      - ./morphik.toml:/app/morphik.toml:ro
      # Persist storage for uploaded files (on persistent disk)
      - ./data/storage:/app/storage
      # Persist logs (on persistent disk)
      - ./data/logs:/app/logs
      # Cache for HuggingFace models (e.g., rerankers)
      - huggingface_cache:/root/.cache/huggingface
    depends_on:
      redis:
        condition: service_healthy
      # No postgres dependency - supports external databases
    networks:
      - morphik-network
    env_file:
      - .env

  worker:
    image: ghcr.io/morphik-org/morphik-core:latest
    container_name: morphik-worker
    # The worker runs as a background job processor, so no ports are exposed.
    command: arq core.workers.ingestion_worker.WorkerSettings
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
      # Use environment variable for database connection (supports external databases)
      - POSTGRES_URI=${POSTGRES_URI:-postgresql+asyncpg://morphik:morphik@postgres:5432/morphik}
      - PGPASSWORD=${PGPASSWORD:-morphik}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      # Use custom config file (created by startup script)
      - ./morphik.toml:/app/morphik.toml:ro
      # Persist storage for uploaded files (on persistent disk)
      - ./data/storage:/app/storage
      # Persist logs (on persistent disk)
      - ./data/logs:/app/logs
      - huggingface_cache:/root/.cache/huggingface
    depends_on:
      redis:
        condition: service_healthy
      # No postgres dependency - supports external databases
    networks:
      - morphik-network
    env_file:
      - .env

  redis:
    image: redis:7-alpine
    container_name: morphik-redis
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - morphik-network

# postgres and ollama services removed - using external CloudSQL and Ollama

networks:
  morphik-network:
    driver: bridge

volumes:
  redis_data:
  huggingface_cache: 
